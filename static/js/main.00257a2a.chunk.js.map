{"version":3,"sources":["App.module.css","Inputs.module.css","Bottons.module.css","Bottons.tsx","Inputs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ButtonComp","props","className","s","button","onClick","clickOnButton","disabled","disabledButton","value","title","InputComp","maxValue","active","App","useState","setValue","body","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,KAAO,oB,iBCA7ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,2B,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,0B,sJCOdC,EAAa,SAACC,GACvB,OAEI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,wBAAQC,QAASJ,EAAMK,cAAeC,SAAUN,EAAMO,eAAeP,EAAMQ,OAA3E,SAAoFR,EAAMS,W,gBCNzFC,EAAY,SAACV,GACtB,OACI,uBAAOC,UAAYD,EAAMQ,QAAQR,EAAMW,SAAYT,IAAEI,SAAUJ,IAAEU,OAC7DJ,MAAOR,EAAMQ,SC4CVK,MA/Cf,WAAgB,IAAD,EACeC,mBAAiB,GADhC,mBACJN,EADI,KACGO,EADH,KAkBX,OACI,sBAAKd,UAAWC,IAAEW,IAAlB,UACI,yCACA,sBAAKZ,UAAWC,IAAEc,KAAlB,UACA,cAAC,EAAD,CACIR,MAAOA,EACPG,SArBa,IAwBjB,sBAAKV,UAAWC,IAAEe,OAAlB,UACA,cAAC,EAAD,CACIZ,cAxBM,WAHO,GAILG,GAASA,EAHJ,GAIjBO,EAASP,EAAQ,IAuBbC,MAAO,MACPD,MAAOA,EACPD,eAlBc,SAACC,GAAD,QAXD,IAWsBA,MAoBvC,cAAC,EAAD,CACIH,cAxBQ,WAChBU,EAVqB,IAkCbN,MAAO,QACPD,MAAOA,EACPD,eAtBgB,SAACC,GAAD,QAA6B,IAARA,gBCRtCU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00257a2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__qodDa\",\"Button\":\"App_Button__otb8x\",\"body\":\"App_body__3nb95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Inputs_active__30Ivd\",\"disabled\":\"Inputs_disabled__2X_h1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Bottons_button__3Qykq\"};","import React from 'react';\r\nimport s from './Bottons.module.css';\r\nexport type ButtonCompType = {\r\n    title: string\r\n    clickOnButton: () => void\r\n    value: number\r\n    disabledButton: (value:number)=>boolean\r\n}\r\nexport const ButtonComp = (props: ButtonCompType) => {\r\n    return (\r\n\r\n        <div className={s.button}>\r\n            <button onClick={props.clickOnButton} disabled={props.disabledButton(props.value)}>{props.title}</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Inputs.module.css';\r\nexport type InputCompType = {\r\n    value: number\r\n    maxValue: number\r\n}\r\nexport const InputComp = (props: InputCompType) => {\r\n    return (\r\n        <input className={(props.value===props.maxValue) ? s.disabled: s.active}\r\n            value={props.value}/>\r\n    )\r\n}","import React, {useState} from 'react';\nimport s from './App.module.css';\nimport {ButtonComp} from \"./Bottons\";\nimport {InputComp} from \"./Inputs\";\n\n\nfunction App() {\n    const [value, setValue] = useState<number>(0)\n    const minValue: number = 0;\n    const maxValue: number = 5;\n\n    const incButton = () => {\n        if (minValue <= value && value < maxValue) {\n            setValue(value + 1)\n        }\n    }\n\n    const resetButton = () => {\n        setValue(minValue)\n    }\n    const disabledIncButton = (value: number) =>!!(value===maxValue)\n\n    const disabledResetButton = (value: number) =>!!(value===0)\n\n    return (\n        <div className={s.App}>\n            <h1>Counter</h1>\n            <div className={s.body}>\n            <InputComp\n                value={value}\n                maxValue={maxValue}\n            />\n\n            <div className={s.Button}>\n            <ButtonComp\n                clickOnButton={incButton}\n                title={'inc'}\n                value={value}\n                disabledButton={disabledIncButton}\n            />\n            <ButtonComp\n                clickOnButton={resetButton}\n                title={'reset'}\n                value={value}\n                disabledButton={disabledResetButton}\n            />\n            </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}